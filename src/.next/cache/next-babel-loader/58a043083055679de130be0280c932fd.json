{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n//Hooks\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport useSWR from \"swr\"; //API call functions\n\n//Components\nimport Layout from \"@components/Layout\";\nimport TagList from \"@components/TagList\";\nimport TopicList from \"@components/TopicList\"; //Utils\n\nimport { fetcher, forceArray, queryStringify, queryStringify2 } from \"@lib/utils\"; //Static Gen Data Fetch\n\n// TODO filter by category, search queries\nexport var __N_SSG = true;\nexport default function IndexPage(_ref) {\n  var categories = _ref.categories,\n      docs = _ref.docs;\n  var router = useRouter();\n\n  var _useState = useState([]),\n      optionTags = _useState[0],\n      setOptionTags = _useState[1];\n\n  var _useState2 = useState([]),\n      topicsResults = _useState2[0],\n      setTopicsResults = _useState2[1];\n\n  var _useState3 = useState(0),\n      topicsPage = _useState3[0],\n      setTopicsPage = _useState3[1]; // const docsRoute = new URL(\"/api/docs\", \"https://x.x\");\n  // const result = useSWR(docsRoute, fetcher);\n\n\n  var result = useSWR(\"/api/docs?\".concat(queryStringify2(\"\", router.query.tags, topicsPage)), fetcher);\n  console.log(\"router.query.tags =\");\n  console.log(router.query.tags); //initial load static-fetched data into state\n\n  useEffect(function () {\n    setOptionTags(docs.tags);\n    setTopicsResults(docs.topics);\n  }, []); //pass client-fetched updated data into state\n\n  useEffect(function () {\n    if (!result.data) return;\n    setOptionTags(result.data.gotDocs.tags);\n    setTopicsResults(result.data.gotDocs.topics);\n  }, [result.data]); //Tag click event handler\n\n  var onToggleTags = function onToggleTags(tag) {\n    var oldTags = forceArray(router.query.tags);\n    var newTags = oldTags.includes(tag) ? oldTags.filter(function (i) {\n      return i !== tag;\n    }) : [].concat(_toConsumableArray(oldTags), [tag]);\n    router.push(\"?\" + queryStringify2(\"\", newTags, topicsPage), undefined, {\n      shallow: true\n    }); //console.log(queryStringify2(\"search\", newTags, \"page\"));\n  };\n\n  return __jsx(Layout, {\n    categories: categories\n  }, __jsx(TagList, {\n    optionTags: optionTags,\n    queryTags: router.query.tags,\n    onToggleTags: onToggleTags\n  }), __jsx(TopicList, {\n    topics: topicsResults\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}