{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport QueryString from \"querystring\";\nexport default function Test() {\n  var oldArray = [{\n    id: \"hello\",\n    test: false\n  }, {\n    id: \"cloud\",\n    test: false\n  }, {\n    id: \"television\",\n    test: false\n  }, {\n    id: \"bassguitar\",\n    test: false\n  }, {\n    id: \"guitar\",\n    test: false\n  }]; // let things = [\"hello\", \"bassguitar\", \"cloud\", \"guitar\", \"television\"];\n\n  var bass = [\"bassguitar\", \"guitar\"];\n  console.log(oldArray); // console.log(things);\n  // let newArray = oldArray.map((v, i) => {\n  //   let newV = { ...v };\n  //   console.log(newV.id);\n  //   if (bass.includes(newV.id)) {\n  //     newV.test = true;\n  //     return newV;\n  //   } else return v;\n  // });\n  // let newArray = things.filter((item) => {\n  //   return bass.includes(item);\n  // });\n\n  var newArray = oldArray.filter(function (item) {\n    // console.log(item.id);\n    return !bass.includes(item.id);\n  });\n  console.log(newArray);\n  var testURL = new URL(\"/test\", \"https://www.notarealwebsite.com\");\n  var fullQueries = QueryString.stringify({\n    search: \"req.query.search\",\n    tags: bass,\n    page: \"req.query.page\"\n  });\n  testURL.search = fullQueries;\n  console.log(testURL.search);\n  return __jsx(\"div\", null, __jsx(\"h1\", null, \"Test Page\"));\n} // from useeffect [querytags]\n// const updatedOptionTags = optionTags.filter((oTag) =>\n//   // queryTags.some((qTag) => {\n//   //   qTag === oTag.id;\n//   // })\n//   {\n//     console.log(oTag);\n//     oTag.id === \"abolition\";\n//   }\n// );\n// const updatedOptionTags = [...optionTags];\n// if (!queryTags) return;\n// queryTags.forEach((tag) => {\n//   console.log(updatedOptionTags.some((option) => option.id == tag));\n// });\n// optionTags.map((tag, index) => {\n//   const newTag = { ...tag };\n//   Array.isArray(queryTags)\n//     ? queryTags.includes(newTag.id)\n//       ? (newTag.active = true)\n//       : null\n//     : queryTags === newTag.id\n//     ? (newTag.active = true)\n//     : null;\n//   return newTag;\n// });\n// console.log(\"updated array =\");\n// console.log(updatedOptionTags);\n// setOptionTags(updatedOptionTags);","map":null,"metadata":{},"sourceType":"module"}