{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/Users/Jai/radical-directory/radicaldirectory.github.io/src/pages/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n//Hooks\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport useSWR from \"swr\"; //API call functions\n\n//Components\nimport Layout from \"@components/Layout\";\nimport TagList from \"@components/TagList\";\nimport TopicList from \"@components/TopicList\"; //Utils\n\nimport { fetcher, forceArray, queryStringify, queryStringify2 } from \"@lib/utils\"; //Static Gen Data Fetch\n\n// TODO filter by category, search queries\nexport var __N_SSG = true;\nexport default function IndexPage(_ref) {\n  _s();\n\n  var categories = _ref.categories,\n      docs = _ref.docs;\n  var router = useRouter();\n\n  var _useState = useState([]),\n      optionTags = _useState[0],\n      setOptionTags = _useState[1];\n\n  var _useState2 = useState([]),\n      topicsResults = _useState2[0],\n      setTopicsResults = _useState2[1];\n\n  var _useState3 = useState(0),\n      topicsPage = _useState3[0],\n      setTopicsPage = _useState3[1]; // const docsRoute = new URL(\"/api/docs\", \"https://x.x\");\n  // const result = useSWR(docsRoute, fetcher);\n\n\n  var result = useSWR(\"/api/docs?\".concat(queryStringify2(\"\", router.query.tags, topicsPage)), fetcher); // console.log(\"router.query.tags =\");\n  // console.log(router.query.tags);\n  //initial load static-fetched data into state\n\n  useEffect(function () {\n    setOptionTags(docs.tags);\n    setTopicsResults(docs.topics);\n  }, []); //pass client-fetched updated data into state\n\n  useEffect(function () {\n    if (!result.data) return;\n    setOptionTags(result.data.gotDocs.tags);\n    setTopicsResults(result.data.gotDocs.topics);\n  }, [result.data]); //Tag click event handler\n\n  var onToggleTags = function onToggleTags(tag) {\n    var oldTags = forceArray(router.query.tags);\n    var newTags = oldTags.includes(tag) ? oldTags.filter(function (i) {\n      return i !== tag;\n    }) : [].concat(_toConsumableArray(oldTags), [tag]);\n    router.push(\"?\" + queryStringify2(\"\", newTags, topicsPage), undefined, {\n      shallow: true\n    }); //console.log(queryStringify2(\"search\", newTags, \"page\"));\n  };\n\n  return __jsx(Layout, {\n    categories: categories,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, __jsx(TagList, {\n    optionTags: optionTags,\n    queryTags: router.query.tags,\n    onToggleTags: onToggleTags,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), __jsx(TopicList, {\n    topics: topicsResults,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(IndexPage, \"twqctI1iU9ZBf45Xn5gkcBPzi8E=\", false, function () {\n  return [useRouter, useSWR];\n});\n\n_c = IndexPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"IndexPage\");","map":{"version":3,"sources":["/Users/Jai/radical-directory/radicaldirectory.github.io/src/pages/index.js"],"names":["useState","useEffect","useRouter","useSWR","Layout","TagList","TopicList","fetcher","forceArray","queryStringify","queryStringify2","IndexPage","categories","docs","router","optionTags","setOptionTags","topicsResults","setTopicsResults","topicsPage","setTopicsPage","result","query","tags","topics","data","gotDocs","onToggleTags","tag","oldTags","newTags","includes","filter","i","push","undefined","shallow"],"mappings":"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","sourcesContent":["//Hooks\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport useSWR from \"swr\";\n\n//API call functions\nimport { getCategories } from \"@api/categories\";\nimport { getDocs } from \"@api/docs\";\n\n//Components\nimport Layout from \"@components/Layout\";\nimport TagList from \"@components/TagList\";\nimport TopicList from \"@components/TopicList\";\n\n//Utils\nimport {\n  fetcher,\n  forceArray,\n  queryStringify,\n  queryStringify2,\n} from \"@lib/utils\";\n\n//Static Gen Data Fetch\nexport async function getStaticProps() {\n  const categories = await getCategories();\n  const docs = await getDocs();\n  return {\n    props: {\n      categories,\n      docs,\n    },\n  };\n}\n\n// TODO filter by category, search queries\n\nexport default function IndexPage({ categories, docs }) {\n  const router = useRouter();\n  const [optionTags, setOptionTags] = useState([]);\n  const [topicsResults, setTopicsResults] = useState([]);\n  const [topicsPage, setTopicsPage] = useState(0);\n  // const docsRoute = new URL(\"/api/docs\", \"https://x.x\");\n  // const result = useSWR(docsRoute, fetcher);\n  const result = useSWR(\n    `/api/docs?${queryStringify2(\"\", router.query.tags, topicsPage)}`,\n    fetcher\n  );\n\n  // console.log(\"router.query.tags =\");\n  // console.log(router.query.tags);\n\n  //initial load static-fetched data into state\n  useEffect(() => {\n    setOptionTags(docs.tags);\n    setTopicsResults(docs.topics);\n  }, []);\n\n  //pass client-fetched updated data into state\n  useEffect(() => {\n    if (!result.data) return;\n    setOptionTags(result.data.gotDocs.tags);\n    setTopicsResults(result.data.gotDocs.topics);\n  }, [result.data]);\n\n  //Tag click event handler\n  const onToggleTags = (tag) => {\n    let oldTags = forceArray(router.query.tags);\n    let newTags = oldTags.includes(tag)\n      ? oldTags.filter((i) => i !== tag)\n      : [...oldTags, tag];\n    router.push(\"?\" + queryStringify2(\"\", newTags, topicsPage), undefined, {\n      shallow: true,\n    });\n    //console.log(queryStringify2(\"search\", newTags, \"page\"));\n  };\n\n  return (\n    <Layout categories={categories}>\n      <TagList\n        optionTags={optionTags}\n        queryTags={router.query.tags}\n        onToggleTags={onToggleTags}\n      />\n      <TopicList topics={topicsResults} />\n    </Layout>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}