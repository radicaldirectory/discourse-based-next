{"ast":null,"code":"import Axios from \"axios\";\nexport async function getTopic(topicID) {\n  let config = {\n    method: \"get\",\n    url: `https://radical.directory/t/${topicID}.json`,\n    headers: {}\n  };\n  let topic = new Object();\n  await Axios(config).then(response => {\n    topic.title = response.data.title;\n    const topicPosts = response.data.post_stream.posts;\n    topic.posts = topicPosts.map(topicPost => {\n      return {\n        id: topicPost.id,\n        username: topicPost.username,\n        cooked: topicPost.cooked,\n        updated_at: topicPost.updated_at\n      };\n    }); // topic = response.data;\n  }).catch(error => {\n    console.log(error);\n  });\n  return topic;\n}\nexport default async function returnTopic(req, res) {\n  const {\n    query: {\n      topicID\n    }\n  } = req;\n  const gotTopic = await getTopic(topicID);\n  return res.status(200).json({\n    gotTopic\n  });\n}","map":null,"metadata":{},"sourceType":"module"}