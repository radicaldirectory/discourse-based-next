{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useSWRInfinite } from \"swr\";\nimport Layout from \"@components/Layout\";\nimport TopicListItem from \"@components/TopicListItem\";\nimport { getCategories } from \"@api/categories\";\n\nconst fetcher = (...args) => fetch(...args).then(res => res.json());\n\nconst PAGE_SIZE = 30; //-----------------------------------------------------------------------------\n\nfunction TopicListPage({\n  topicList\n}) {\n  //console.log(\"topiclist =\");\n  //console.log(topicList);\n  return __jsx(\"div\", null, topicList.map((value, index) => {\n    return __jsx(TopicListItem, {\n      key: index,\n      value: value\n    });\n  }));\n} //-----------------------------------------------------------------------------\n\n\nfunction TopicList({\n  categories\n}) {\n  var _data$, _data;\n\n  const router = useRouter();\n  const {\n    id\n  } = router.query; //console.log(\"ID = \" + id);\n\n  const {\n    data,\n    error,\n    mutate,\n    size,\n    setSize,\n    isValidating\n  } = useSWRInfinite(index => `/api/c/${id}?page=${index}`, fetcher);\n  const topicsPages = data ? [].concat(...data) : []; //console.log(topicsPages);\n\n  const isLoadingInitialData = !data && !error;\n  const isLoadingMore = isLoadingInitialData || size > 0 && data && typeof data[size - 1] === \"undefined\";\n  const isEmpty = (data === null || data === void 0 ? void 0 : (_data$ = data[0]) === null || _data$ === void 0 ? void 0 : _data$.length) === 0;\n  const isReachingEnd = isEmpty || data && ((_data = data[data.length - 1]) === null || _data === void 0 ? void 0 : _data.length) < PAGE_SIZE;\n  const isRefreshing = isValidating && data && data.length === size;\n  return (// <Layout categories={categories}>\n    __jsx(React.Fragment, null, __jsx(\"ul\", {\n      className: \"self-center mt-5 topic-list\"\n    }, isEmpty ? __jsx(\"p\", null, \"No topics found.\") : null, topicsPages.map(topicsPage => {\n      //console.log(\"topicspage before pass = \");\n      //console.log(topicsPage);\n      return __jsx(TopicListPage, {\n        key: topicsPage.id,\n        topicList: topicsPage.topicList\n      });\n    })), __jsx(\"p\", null, __jsx(\"button\", {\n      className: \"ml-2 btn-blue\",\n      disabled: isLoadingMore || isReachingEnd,\n      onClick: () => setSize(size + 1)\n    }, isLoadingMore ? \"loading...\" : isReachingEnd ? \"no more topics\" : \"load more\"), __jsx(\"button\", {\n      className: \"ml-2 btn-blue\",\n      disabled: isRefreshing,\n      onClick: () => mutate()\n    }, isRefreshing ? \"refreshing...\" : \"refresh\"), __jsx(\"button\", {\n      className: \"ml-2 btn-blue\",\n      disabled: !size,\n      onClick: () => setSize(0)\n    }, \"clear\"), __jsx(\"span\", {\n      className: \"ml-2 italic text-gray-600\"\n    }, \"Showing \", size, \" page(s) of \", isLoadingMore ? \"...\" : topicsPages.length, \" \", \"topic(s)\", \" \"))) // </Layout>\n\n  );\n} // export async function getStaticProps() {\n//   const categories = await getCategories();\n//   return {\n//     props: {\n//       categories,\n//     },\n//   };\n// }\n\n\nexport default TopicList;","map":null,"metadata":{},"sourceType":"module"}