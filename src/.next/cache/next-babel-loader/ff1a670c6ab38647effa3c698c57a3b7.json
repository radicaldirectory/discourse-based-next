{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport Layout from \"@components/Layout\";\nimport TopicContent from \"@components/TopicContent\";\nimport { getCategories } from \"@api/categories\";\nimport { getTopic } from \"@api/t/[topicID]\";\nimport { getAllTopicIDS } from \"@api/docs\"; // import useSWR from \"swr\";\n// import { fetcher } from \"@lib/utils\";\n\nfunction Topic({\n  categories,\n  topic\n}) {\n  const router = useRouter(); // const result = useSWR(`/api/t/${router.query.id}`, fetcher);\n\n  if (!categories) {\n    return __jsx(\"div\", null, \"Loading...\");\n  } // console.log(categories);\n\n\n  return __jsx(Layout, {\n    categories: categories\n  }, __jsx(React.Fragment, null, __jsx(\"hr\", null), router.isFallback ? __jsx(\"div\", null, \"Loading...\") : __jsx(TopicContent, {\n    topic: topic\n  })));\n}\n\nexport async function getStaticPaths() {\n  //const idsArray = await getAllTopicIDS();\n  const idsStatic = [\"128\", \"54\", \"127\", \"126\", \"125\", \"123\", \"120\", \"119\", \"118\", \"117\", \"116\", \"113\", \"114\", \"112\", \"110\", \"109\", \"108\", \"107\", \"106\", \"105\", \"101\", \"104\", \"103\", \"102\", \"100\", \"99\", \"98\", \"97\", \"96\", \"95\", \"31\", \"81\", \"92\", \"84\", \"42\", \"56\", \"38\", \"29\", \"35\", \"59\", \"28\", \"46\", \"34\", \"23\", \"57\", \"33\", \"32\", \"36\", \"27\", \"25\", \"20\", \"58\", \"61\", \"60\", \"68\", \"52\", \"55\", \"53\", \"51\", \"50\", \"49\", \"48\", \"47\", \"45\", \"44\", \"43\", \"41\", \"40\", \"39\", \"30\", \"26\"];\n  const allPaths = idsStatic.map(topicID => ({\n    params: {\n      id: topicID\n    }\n  }));\n  return {\n    paths: [],\n    fallback: true\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  const categories = await getCategories();\n  const topic = await getTopic(params.id); // console.log(params.id);\n\n  return {\n    props: {\n      categories,\n      topic\n    }\n  };\n}\nexport default Topic;","map":null,"metadata":{},"sourceType":"module"}