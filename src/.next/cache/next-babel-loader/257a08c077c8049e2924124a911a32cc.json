{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Axios from \"axios\";\nexport function getCategories() {\n  return _getCategories.apply(this, arguments);\n}\n\nfunction _getCategories() {\n  _getCategories = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var config, categories;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            config = {\n              method: \"get\",\n              url: \"https://radical.directory/categories.json\",\n              headers: {}\n            };\n            _context.next = 3;\n            return Axios(config).then(function (response) {\n              var categoriesFull = response.data.category_list.categories;\n              categories = categoriesFull.map(function (category) {\n                return {\n                  id: category.id,\n                  name: category.name\n                };\n              });\n            })[\"catch\"](function (error) {\n              console.log(error);\n            });\n\n          case 3:\n            return _context.abrupt(\"return\", categories);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getCategories.apply(this, arguments);\n}\n\nfunction returnCategories(_x, _x2) {\n  return _returnCategories.apply(this, arguments);\n}\n\nfunction _returnCategories() {\n  _returnCategories = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_, res) {\n    var gotCategories;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return getCategories();\n\n          case 2:\n            gotCategories = _context2.sent;\n            return _context2.abrupt(\"return\", res.status(200).json({\n              gotCategories: gotCategories\n            }));\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _returnCategories.apply(this, arguments);\n}\n\nexport default returnCategories;","map":null,"metadata":{},"sourceType":"module"}