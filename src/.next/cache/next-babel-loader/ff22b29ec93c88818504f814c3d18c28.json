{"ast":null,"code":"var _jsxFileName = \"/Users/Jai/radical-directory/radicaldirectory.github.io/src/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n//Hooks\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport useSWR from \"swr\"; //API call functions\n\nimport { getCategories } from \"@api/categories\";\nimport { getDocs } from \"@api/docs\"; //Components\n\nimport Layout from \"@components/Layout\";\nimport TagList from \"@components/TagList\";\nimport TopicList from \"@components/TopicList\"; //Utils\n\nimport { fetcher, forceArray, queryStringify, queryStringify2 } from \"@lib/utils\"; //Static Gen Data Fetch\n\nexport async function getStaticProps() {\n  const categories = await getCategories();\n  const docs = await getDocs();\n  return {\n    props: {\n      categories,\n      docs\n    }\n  };\n} // TODO filter by category, search queries\n\nexport default function IndexPage({\n  categories,\n  docs\n}) {\n  const router = useRouter();\n  const {\n    0: optionTags,\n    1: setOptionTags\n  } = useState([]);\n  const {\n    0: topicsResults,\n    1: setTopicsResults\n  } = useState([]);\n  const {\n    0: topicsPage,\n    1: setTopicsPage\n  } = useState(0); // const docsRoute = new URL(\"/api/docs\", \"https://x.x\");\n  // const result = useSWR(docsRoute, fetcher);\n\n  const result = useSWR(`/api/docs?${queryStringify2(\"\", router.query.tags, topicsPage)}`, fetcher); // console.log(\"router.query.tags =\");\n  // console.log(router.query.tags);\n  //initial load static-fetched data into state\n\n  useEffect(() => {\n    setOptionTags(docs.tags);\n    setTopicsResults(docs.topics);\n  }, []); //pass client-fetched updated data into state\n\n  useEffect(() => {\n    if (!result.data) return;\n    setOptionTags(result.data.gotDocs.tags);\n    setTopicsResults(result.data.gotDocs.topics);\n  }, [result.data]); //Tag click event handler\n\n  const onToggleTags = tag => {\n    let oldTags = forceArray(router.query.tags);\n    let newTags = oldTags.includes(tag) ? oldTags.filter(i => i !== tag) : [...oldTags, tag];\n    router.push(\"?\" + queryStringify2(\"\", newTags, topicsPage), undefined, {\n      shallow: true\n    }); //console.log(queryStringify2(\"search\", newTags, \"page\"));\n  };\n\n  return __jsx(Layout, {\n    categories: categories,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, __jsx(TagList, {\n    optionTags: optionTags,\n    queryTags: router.query.tags,\n    onToggleTags: onToggleTags,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), __jsx(TopicList, {\n    topics: topicsResults,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/Jai/radical-directory/radicaldirectory.github.io/src/pages/index.js"],"names":["useState","useEffect","useRouter","useSWR","getCategories","getDocs","Layout","TagList","TopicList","fetcher","forceArray","queryStringify","queryStringify2","getStaticProps","categories","docs","props","IndexPage","router","optionTags","setOptionTags","topicsResults","setTopicsResults","topicsPage","setTopicsPage","result","query","tags","topics","data","gotDocs","onToggleTags","tag","oldTags","newTags","includes","filter","i","push","undefined","shallow"],"mappings":"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","sourcesContent":["//Hooks\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport useSWR from \"swr\";\n\n//API call functions\nimport { getCategories } from \"@api/categories\";\nimport { getDocs } from \"@api/docs\";\n\n//Components\nimport Layout from \"@components/Layout\";\nimport TagList from \"@components/TagList\";\nimport TopicList from \"@components/TopicList\";\n\n//Utils\nimport {\n  fetcher,\n  forceArray,\n  queryStringify,\n  queryStringify2,\n} from \"@lib/utils\";\n\n//Static Gen Data Fetch\nexport async function getStaticProps() {\n  const categories = await getCategories();\n  const docs = await getDocs();\n  return {\n    props: {\n      categories,\n      docs,\n    },\n  };\n}\n\n// TODO filter by category, search queries\n\nexport default function IndexPage({ categories, docs }) {\n  const router = useRouter();\n  const [optionTags, setOptionTags] = useState([]);\n  const [topicsResults, setTopicsResults] = useState([]);\n  const [topicsPage, setTopicsPage] = useState(0);\n  // const docsRoute = new URL(\"/api/docs\", \"https://x.x\");\n  // const result = useSWR(docsRoute, fetcher);\n  const result = useSWR(\n    `/api/docs?${queryStringify2(\"\", router.query.tags, topicsPage)}`,\n    fetcher\n  );\n\n  // console.log(\"router.query.tags =\");\n  // console.log(router.query.tags);\n\n  //initial load static-fetched data into state\n  useEffect(() => {\n    setOptionTags(docs.tags);\n    setTopicsResults(docs.topics);\n  }, []);\n\n  //pass client-fetched updated data into state\n  useEffect(() => {\n    if (!result.data) return;\n    setOptionTags(result.data.gotDocs.tags);\n    setTopicsResults(result.data.gotDocs.topics);\n  }, [result.data]);\n\n  //Tag click event handler\n  const onToggleTags = (tag) => {\n    let oldTags = forceArray(router.query.tags);\n    let newTags = oldTags.includes(tag)\n      ? oldTags.filter((i) => i !== tag)\n      : [...oldTags, tag];\n    router.push(\"?\" + queryStringify2(\"\", newTags, topicsPage), undefined, {\n      shallow: true,\n    });\n    //console.log(queryStringify2(\"search\", newTags, \"page\"));\n  };\n\n  return (\n    <Layout categories={categories}>\n      <TagList\n        optionTags={optionTags}\n        queryTags={router.query.tags}\n        onToggleTags={onToggleTags}\n      />\n      <TopicList topics={topicsResults} />\n    </Layout>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}