{"ast":null,"code":"import Axios from \"axios\";\nexport async function getTopic(topicID) {\n  let config = {\n    method: \"get\",\n    url: `https://radical.directory/t/${topicID}.json`,\n    headers: {}\n  };\n  let topic = new Object();\n  await Axios(config).then(response => {\n    topic.title = response.data.title;\n    const topicPosts = response.data.post_stream.posts;\n    topic.posts = topicPosts.map(topicPost => {\n      return {\n        id: topicPost.id,\n        username: topicPost.username,\n        cooked: topicPost.cooked,\n        updated_at: topicPost.updated_at\n      };\n    }); // topic = response.data;\n  }).catch(error => {\n    console.log(error);\n  });\n  return topic;\n}\nexport default async function returnTopic(req, res) {\n  const {\n    query: {\n      topicID\n    }\n  } = req;\n  const gotTopic = await getTopic(topicID);\n  return res.status(200).json({\n    gotTopic\n  });\n}","map":{"version":3,"sources":["/Users/Jai/radical-directory/radicaldirectory.github.io/src/pages/api/t/[topicID].js"],"names":["Axios","getTopic","topicID","config","method","url","headers","topic","Object","then","response","title","data","topicPosts","post_stream","posts","map","topicPost","id","username","cooked","updated_at","catch","error","console","log","returnTopic","req","res","query","gotTopic","status","json"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,eAAeC,QAAf,CAAwBC,OAAxB,EAAiC;AACtC,MAAIC,MAAM,GAAG;AACXC,IAAAA,MAAM,EAAE,KADG;AAEXC,IAAAA,GAAG,EAAG,+BAA8BH,OAAQ,OAFjC;AAGXI,IAAAA,OAAO,EAAE;AAHE,GAAb;AAMA,MAAIC,KAAK,GAAG,IAAIC,MAAJ,EAAZ;AAEA,QAAMR,KAAK,CAACG,MAAD,CAAL,CACHM,IADG,CACGC,QAAD,IAAc;AAClBH,IAAAA,KAAK,CAACI,KAAN,GAAcD,QAAQ,CAACE,IAAT,CAAcD,KAA5B;AACA,UAAME,UAAU,GAAGH,QAAQ,CAACE,IAAT,CAAcE,WAAd,CAA0BC,KAA7C;AACAR,IAAAA,KAAK,CAACQ,KAAN,GAAcF,UAAU,CAACG,GAAX,CAAgBC,SAAD,IAAe;AAC1C,aAAO;AACLC,QAAAA,EAAE,EAAED,SAAS,CAACC,EADT;AAELC,QAAAA,QAAQ,EAAEF,SAAS,CAACE,QAFf;AAGLC,QAAAA,MAAM,EAAEH,SAAS,CAACG,MAHb;AAILC,QAAAA,UAAU,EAAEJ,SAAS,CAACI;AAJjB,OAAP;AAMD,KAPa,CAAd,CAHkB,CAWlB;AACD,GAbG,EAcHC,KAdG,CAcIC,KAAD,IAAW;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,GAhBG,CAAN;AAkBA,SAAOhB,KAAP;AACD;AAED,eAAe,eAAemB,WAAf,CAA2BC,GAA3B,EAAgCC,GAAhC,EAAqC;AAClD,QAAM;AACJC,IAAAA,KAAK,EAAE;AAAE3B,MAAAA;AAAF;AADH,MAEFyB,GAFJ;AAIA,QAAMG,QAAQ,GAAG,MAAM7B,QAAQ,CAACC,OAAD,CAA/B;AAEA,SAAO0B,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BF,IAAAA;AAD0B,GAArB,CAAP;AAGD","sourcesContent":["import Axios from \"axios\";\n\nexport async function getTopic(topicID) {\n  let config = {\n    method: \"get\",\n    url: `https://radical.directory/t/${topicID}.json`,\n    headers: {},\n  };\n\n  let topic = new Object();\n\n  await Axios(config)\n    .then((response) => {\n      topic.title = response.data.title;\n      const topicPosts = response.data.post_stream.posts;\n      topic.posts = topicPosts.map((topicPost) => {\n        return {\n          id: topicPost.id,\n          username: topicPost.username,\n          cooked: topicPost.cooked,\n          updated_at: topicPost.updated_at,\n        };\n      });\n      // topic = response.data;\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n\n  return topic;\n}\n\nexport default async function returnTopic(req, res) {\n  const {\n    query: { topicID },\n  } = req;\n\n  const gotTopic = await getTopic(topicID);\n\n  return res.status(200).json({\n    gotTopic,\n  });\n}\n"]},"metadata":{},"sourceType":"module"}