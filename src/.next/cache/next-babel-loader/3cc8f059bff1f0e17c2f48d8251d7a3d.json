{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport Layout from \"@components/Layout\";\nimport TopicContent from \"@components/TopicContent\";\nimport { getCategories } from \"@api/categories\";\nimport { getTopic } from \"@api/t/[topicID]\";\nimport { getAllTopicIDS } from \"@api/docs\"; // import useSWR from \"swr\";\n// import { fetcher } from \"@lib/utils\";\n\nfunction Topic({\n  categories,\n  topic\n}) {\n  const router = useRouter(); // const result = useSWR(`/api/t/${router.query.id}`, fetcher);\n\n  if (!categories) {\n    return __jsx(\"div\", null, \"Loading...\");\n  } // console.log(categories);\n\n\n  return __jsx(Layout, {\n    categories: categories\n  }, __jsx(React.Fragment, null, __jsx(\"hr\", null), router.isFallback ? __jsx(\"div\", null, \"Loading...\") : __jsx(TopicContent, {\n    topic: topic\n  })));\n}\n\nexport async function getStaticPaths() {\n  const idsArray = await getAllTopicIDS();\n  const allPaths = idsArray.map(topicID => ({\n    params: {\n      id: topicID\n    }\n  }));\n  return {\n    paths: allPaths,\n    fallback: true\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  const categories = await getCategories();\n  const topic = await getTopic(params.id); // console.log(params.id);\n\n  return {\n    props: {\n      categories,\n      topic\n    }\n  };\n}\nexport default Topic;","map":null,"metadata":{},"sourceType":"module"}