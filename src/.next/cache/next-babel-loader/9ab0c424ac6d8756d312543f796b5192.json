{"ast":null,"code":"var _jsxFileName = \"/Users/Jai/radical-directory/radicaldirectory.github.io/src/pages/topic/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport Layout from \"@components/Layout\";\nimport TopicContent from \"@components/TopicContent\";\nimport { getCategories } from \"@api/categories\";\nimport { getTopic } from \"@api/t/[topicID]\"; // import useSWR from \"swr\";\n// import { fetcher } from \"@lib/utils\";\n\nfunction Topic({\n  categories,\n  topic\n}) {\n  const router = useRouter(); // const result = useSWR(`/api/t/${router.query.id}`, fetcher);\n\n  if (!categories) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  } // console.log(categories);\n\n\n  return __jsx(Layout, {\n    categories: categories,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(React.Fragment, null, __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }), router.isFallback ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, \"Loading...\") : __jsx(TopicContent, {\n    topic: topic,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  })));\n}\n\nexport async function getStaticPaths() {\n  return {\n    paths: [],\n    fallback: true\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  const categories = await getCategories();\n  const topic = await getTopic(params.id); // console.log(params.id);\n\n  return {\n    props: {\n      categories,\n      topic\n    }\n  };\n}\nexport default Topic;","map":{"version":3,"sources":["/Users/Jai/radical-directory/radicaldirectory.github.io/src/pages/topic/[id].js"],"names":["useRouter","Layout","TopicContent","getCategories","getTopic","Topic","categories","topic","router","isFallback","getStaticPaths","paths","fallback","getStaticProps","params","id","props"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,QAAT,QAAyB,kBAAzB,C,CAEA;AACA;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAf,EAAsC;AACpC,QAAMC,MAAM,GAAGR,SAAS,EAAxB,CADoC,CAEpC;;AACA,MAAI,CAACM,UAAL,EAAiB;AACf,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,GALmC,CAOpC;;;AAEA,SACE,MAAC,MAAD;AAAQ,IAAA,UAAU,EAAEA,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGE,MAAM,CAACC,UAAP,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,GAGC,MAAC,YAAD;AAAc,IAAA,KAAK,EAAEF,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADF,CADF;AAYD;;AAED,OAAO,eAAeG,cAAf,GAAgC;AACrC,SAAO;AACLC,IAAAA,KAAK,EAAE,EADF;AAELC,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAID;AAED,OAAO,eAAeC,cAAf,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAA0C;AAC/C,QAAMR,UAAU,GAAG,MAAMH,aAAa,EAAtC;AACA,QAAMI,KAAK,GAAG,MAAMH,QAAQ,CAACU,MAAM,CAACC,EAAR,CAA5B,CAF+C,CAI/C;;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLV,MAAAA,UADK;AAELC,MAAAA;AAFK;AADF,GAAP;AAMD;AAED,eAAeF,KAAf","sourcesContent":["import { useRouter } from \"next/router\";\nimport Layout from \"@components/Layout\";\nimport TopicContent from \"@components/TopicContent\";\nimport { getCategories } from \"@api/categories\";\nimport { getTopic } from \"@api/t/[topicID]\";\n\n// import useSWR from \"swr\";\n// import { fetcher } from \"@lib/utils\";\n\nfunction Topic({ categories, topic }) {\n  const router = useRouter();\n  // const result = useSWR(`/api/t/${router.query.id}`, fetcher);\n  if (!categories) {\n    return <div>Loading...</div>;\n  }\n\n  // console.log(categories);\n\n  return (\n    <Layout categories={categories}>\n      <>\n        <hr />\n        {router.isFallback ? (\n          <div>Loading...</div>\n        ) : (\n          <TopicContent topic={topic} />\n        )}\n      </>\n    </Layout>\n  );\n}\n\nexport async function getStaticPaths() {\n  return {\n    paths: [],\n    fallback: true,\n  };\n}\n\nexport async function getStaticProps({ params }) {\n  const categories = await getCategories();\n  const topic = await getTopic(params.id);\n\n  // console.log(params.id);\n\n  return {\n    props: {\n      categories,\n      topic,\n    },\n  };\n}\n\nexport default Topic;\n"]},"metadata":{},"sourceType":"module"}